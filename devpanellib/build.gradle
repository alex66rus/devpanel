buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.novoda:bintray-release:0.9.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}
repositories {
    jcenter()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    Map<String, String> dependencies = rootProject.ext.dependencies

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation dependencies.appcompat
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    excludes = ['**/*.kt'] // < ---- Exclude all kotlin files from javadoc file.
}


def ARTIFACT_ID = 'devpanel'
def VERSION_NAME = '0.1.3-alpha'
def VERSION_CODE = 2 //your version

def DESCRIPTION = 'DevPanel - small android library for displaying some application info and get availability to change some parameters'

def GIT_URL = 'https://github.com/android-tools/devpanel'
def GROUP_NAME = 'com.github.android-tools'
def COMPILE_SDK = 28
def BUILD_TOOLS = '28.0.1'

def MODULE_NAME = 'devpanellib'

def LICENSE = 'Apache-2.0'

def DEVELOPER_ID = 'busylee999'
def DEVELOPER_NAME = 'Popov Dmitry'
def DEVELOPER_EMAIL = 'demonlee999@gmail.com'

def IS_UPLOADING = true //project.getGradle().startParameter.taskNames.any { it.contains('bintrayUpload') }

description = "blabla"

publish {
    userOrg = "busylee"
    groupId = GROUP_NAME
    artifactId = ARTIFACT_ID
    publishVersion = VERSION_NAME
    desc = DESCRIPTION
    licences = [LICENSE]
    website = GIT_URL
}

if (IS_UPLOADING && project.name in [MODULE_NAME]) {
    println project.name
    apply plugin: 'maven'

    project.afterEvaluate {
        gradle.taskGraph.whenReady { taskGraph ->
            taskGraph.getAllTasks().find {
                it.path == ":$project.name:generatePomFileForReleasePublication"
            }?.doLast {
                file("build/publications/release/pom-default.xml").delete()
                println 'Overriding pom-file to make sure we can sync to maven central!'
                pom {
                    //noinspection GroovyAssignabilityCheck
                    project {
                        name "$project.name"
                        groupId GROUP_NAME
                        artifactId ARTIFACT_ID
                        packaging project.name == 'compiler' ? 'jar' : 'aar'
                        description DESCRIPTION
                        url GIT_URL
                        version VERSION_NAME

                        scm {
                            url GIT_URL
                            connection GIT_URL
                            developerConnection GIT_URL
                        }

                        licenses {
                            license {
                                name LICENSE
                            }
                        }

                        developers {
                            developer {
                                id DEVELOPER_ID
                                name DEVELOPER_NAME
                                email DEVELOPER_EMAIL
                            }
                        }

                        dependencies {
                            dependency {
                                groupId "org.jetbrains.kotlin"
                                artifactId "kotlin-android-extensions-runtime"
                                version "1.3.40"
                                scope "runtime"
                            }
                            dependency {
                                groupId "org.jetbrains.kotlin"
                                artifactId "kotlin-stdlib"
                                version "1.3.40"
                                scope "runtime"
                            }
                            dependency {
                                groupId "androidx.appcompat"
                                artifactId "appcompat"
                                version "1.0.0"
                                scope "runtime"
                            }
                            dependency {
                                groupId "net.cachapa.expandablelayout"
                                artifactId "expandablelayout"
                                version "2.9.2"
                                scope "runtime"
                            }
                        }
                    }
                }.writeTo("build/publications/release/pom-default.xml")
            }
        }
    }
}